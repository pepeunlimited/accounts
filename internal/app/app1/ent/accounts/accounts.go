// Code generated by entc, DO NOT EDIT.

package accounts

import (
	"github.com/pepeunlimited/accounts/internal/app/app1/ent/schema"
)

const (
	// Label holds the string label denoting the accounts type in the database.
	Label = "accounts"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldBalance holds the string denoting the balance vertex property in the database.
	FieldBalance = "balance"
	// FieldVersion holds the string denoting the version vertex property in the database.
	FieldVersion = "version"
	// FieldType holds the string denoting the type vertex property in the database.
	FieldType = "type"
	// FieldIsWithdrawable holds the string denoting the is_withdrawable vertex property in the database.
	FieldIsWithdrawable = "is_withdrawable"
	// FieldUserID holds the string denoting the user_id vertex property in the database.
	FieldUserID = "user_id"

	// Table holds the table name of the accounts in the database.
	Table = "accounts"
	// TxsTable is the table the holds the txs relation/edge.
	TxsTable = "txs"
	// TxsInverseTable is the table name for the Txs entity.
	// It exists in this package in order to avoid circular dependency with the "txs" package.
	TxsInverseTable = "txs"
	// TxsColumn is the table column denoting the txs relation/edge.
	TxsColumn = "accounts_id"
)

// Columns holds all SQL columns for accounts fields.
var Columns = []string{
	FieldID,
	FieldBalance,
	FieldVersion,
	FieldType,
	FieldIsWithdrawable,
	FieldUserID,
}

var (
	fields = schema.Accounts{}.Fields()

	// descType is the schema descriptor for type field.
	descType = fields[2].Descriptor()
	// TypeValidator is a validator for the "type" field. It is called by the builders before save.
	TypeValidator = descType.Validators[0].(func(string) error)
)
